<%
/*
 *  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 *
 */
var caramel;
require("/modules/store.js").exec(function (ctx) {
    caramel = require("caramel");
    var app = require("rxt").app;
    var server = require("store").server;
    var user = server.current(ctx.session);
    var ui = require("rxt").ui;
    var page = ui.buildPage(ctx.session, ctx.request);
    var appManager;

    var uri = request.getRequestURI();
    var uriMatcher = new URIMatcher(String(uri));

    if (uriMatcher.match("/{context}/pages/policies/add/new")) {
        var deviceModule = require("../modules/device.js").deviceModule;
        var deviceTypes = deviceModule.getDeviceTypes().data;
        var deviceId = request.getParameter("deviceId");
        var deviceType = request.getParameter("deviceType");

        //TODO: retrieve these from api endpoints
        page.roles = ["admin"];
        page.users = ["admin"];

        if (deviceId && deviceType) {
            page.deviceId = deviceId;
            page.deviceType = deviceType;
            page.meta.title = "Store | Add Device Policy";
            page.title = "Add Device Policy: " + deviceModule.getDevice(deviceType, deviceId).name;
        } else {
            for (var i = 0; i < deviceTypes.length; i++) {
                deviceType = deviceTypes[i];

                //Setting defaults
                var storeTitle = deviceType.name;
                var storeDescription = "Add policy for " + deviceType.name;

                if (deviceType.storeTitle) {
                    storeTitle = deviceType.storeTitle;
                }

                if (deviceType.storeDescription) {
                    storeDescription = deviceType.storeDescription;
                }

                deviceTypes[i].storeTitle = storeTitle;
                deviceTypes[i].storeDescription = storeDescription;
            }

            page.deviceTypes = deviceTypes;
            page.meta.title = "Store | Add Policy";
            page.title = "Add Device Policy";
        }
        page.partial = "policy-add-new";
    } else if (uriMatcher.match("/{context}/pages/policies/add")) {
        var deviceModule = require("../modules/device.js").deviceModule;
        var deviceTypes = deviceModule.getDeviceTypes().data;
        var deviceId = request.getParameter("deviceId");
        var deviceType = request.getParameter("deviceType");

        if (deviceId && deviceType) {
            page.deviceId = deviceId;
            page.deviceType = deviceType;
            page.meta.title = "Store | Add Device Policy";
            page.title = "Add Device Policy: " + deviceModule.getDevice(deviceType, deviceId).name;
        } else {
            for (var i = 0; i < deviceTypes.length; i++) {
                deviceType = deviceTypes[i];

                //setting defaults
                var storeTitle = deviceType.name;
                var storeDescription = "Add policy for " + deviceType.name;

                if (deviceType.storeTitle != null) {
                    storeTitle = deviceType.storeTitle;
                }

                if (deviceType.storeDescription != null) {
                    storeDescription = deviceType.storeDescription;
                }

                deviceTypes[i].storeTitle = storeTitle;
                deviceTypes[i].storeDescription = storeDescription;
            }

            page.deviceTypes = deviceTypes;
            page.meta.title = "Store | Add Policy";
            page.title = "Add Device Policy";
        }
        page.partial = "policy-add";
    } else if (uriMatcher.match("/{context}/pages/policies/new")) {
        var policyModule = require("../modules/policy.js").policyModule;
        page.partial = "policy-listing-new";
        page.policies = policyModule.getPolicies();
    } else {
        var policyModule = require("../modules/policy.js").policyModule;
        page.partial = "policy-listing";
        page.policies = policyModule.getPolicies();
    }

    appManager = app.createUserAppManager(session);
    var output = appManager.render([], page);
    caramel.render(output);

}, request, response, session);
%>